/*The following queries use a private database labeled chinook containing information for a digital media store including customer, employee and media content information. */

/*Show list of customers not located in the USA*/
SELECT CustomerID, FirstName, LastName, Country FROM chinook.customers
    WHERE Country <> 'USA'
    ORDER BY CustomerID;

/*Show number of customers in each country*/
SELECT country, COUNT(country) from chinook.customers
    GROUP by country;
    
/*Show only customers in Brazil*/
SELECT CustomerID, FirstName, LastName, Country FROM chinook.customers
    WHERE Country = 'Brazil'
    ORDER BY CustomerID;

/*Show all invoices from customers in Brazil*/
SELECT customers.CustomerID, customers.FirstName, customers.LastName, invoices.BillingCountry, 
invoices.InvoiceId, invoices.InvoiceDate FROM chinook.customers
    LEFT JOIN chinook.invoices
    ON customers.CustomerID = invoices.CustomerId
    WHERE BillingCountry = 'Brazil'
    Order BY customers.CustomerID ASC;

/*Filter for employees who are sales agents*/
SELECT EmployeeID, FirstName, LastName, Title from chinook.employees
    WHERE Title like  '%Sales%Agent%';

/*Show number of invoices from each country used for billing*/
SELECT BillingCountry, COUNT (BillingCountry) from chinook.invoices
    GROUP BY BillingCountry;

/*Show invoices with the associated sales agent*/
SELECT a.invoiceID, b.firstname AS Customer_FirstName, b.LastName AS Customer_LastName, b.SupportRepId, c.firstname, c.lastname from chinook.invoices a
    JOIN chinook.customers b
    ON a.customerID=b.customerID
    JOIN chinook.employees c
    ON b.supportrepid=c.employeeid
    ORDER BY supportrepid ASC;
    
/*Display number of invoices each sales agent has*/
SELECT COUNT (a.invoiceid), b.supportrepid, c.firstname AS Rep_FirstName, c.lastname AS Rep_LastName from chinook.invoices a
    Join chinook.customers b
    ON a.customerID=b.customerID
    JOIN chinook.employees c
    ON b.supportrepid = c.employeeid
    GROUP BY b.supportrepid;
    
/*Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.*/
SELECT a.total, b.firstname AS Cust_FirstName, b.lastname AS Cust_LastName, b.country, c.firstname AS Rep_Firstname, c. lastname AS Rep_LastName
    FROM chinook.invoices a
    JOIN chinook.customers b
    ON a.customerid = b.customerID
    JOIN chinook.employees c
    ON b.supportrepid = c.employeeid
    ORDER BY total ASC;

/*How many Invoices were there in 2009?*/
SELECT COUNT (invoiceID) AS Invoices2009 from chinook.invoices
    WHERE invoicedate LIKE '%2009%';
    
/*What are the total sales for 2009?*/
SELECT ROUND(SUM (total),2) AS TotalSales2009 from chinook.invoices
    WHERE invoicedate LIKE '%2009%';
    
/*Write a query that includes the purchased track name with each invoice line ID.*/
SELECT a.InvoiceID, a.InvoiceLineID, b.Name FROM chinook.invoice_items a
    JOIN chinook.tracks b
    ON a.TrackID = b.TrackID
    ORDER BY b.name ASC;
    
/*Write a query that includes the purchased track name AND artist name with each invoice line ID.*/
SELECT a.InvoiceID, a.InvoiceLineID, b.Name as TRACK, d.Name as ARTIST FROM chinook.invoice_items a
    JOIN chinook.tracks b
    ON a.TrackID = b.TrackID
    JOIN chinook.albums c
    ON b.AlbumID = c.AlbumID
    JOIN chinook.artists d
    ON c.ArtistID = d.artistID
    ORDER BY Artist, Track ASC;
    
    
/*Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.*/
SELECT a.Name as Track, b.Title as Album, c.Name as MediaType, d.Name as Genre
    FROM chinook.tracks a
    JOIN chinook.albums b
    ON a.Albumid = b.AlbumId
    JOIN chinook.media_types c
    ON a.mediatypeId = c.mediatypeid
    JOIN chinook.genres d
    ON a.genreid = d.genreid
    Order by Album, Track ASC;
  
/*Show the total sales made by each sales agent.*/
SELECT a.FirstName as First, a.LastName as Last, ROUND(SUM(b.Total),2) FROM chinook.employees a
    JOIN chinook.invoices b
    ON c.customerID = b.customerid
    JOIN chinook.customers c
    ON a.EmployeeID = c.SupportRepID
    GROUP BY c.supportrepid;
    
